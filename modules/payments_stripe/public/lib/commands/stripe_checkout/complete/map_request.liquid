{% liquid
  assign data = '{}' | parse_json

  if object.request_data
    assign response = object.request_data | parse_json

    hash_assign data['valid'] = true
    hash_assign data['external_id'] = response.client_reference_id
    function transaction = 'modules/payments/queries/transactions/find', id: data.external_id
    hash_assign data['transaction'] = transaction
    assign customer = nil | hash_merge: customer_id: response.customer, email: response.customer_details.email, name: response.customer_details.name, reference_id: transaction.payer_id
    hash_assign data['customer'] = customer

    case object.name
      when 'checkout.session.completed'
        hash_assign data['status'] = 'pending'

        if response.payment_status == 'paid'
          hash_assign data['status'] = 'succeeded'
        endif

      when 'checkout.session.async_payment_succeeded'
        hash_assign data['status'] = 'succeeded'

      when 'checkout.session.async_payment_failed'
        hash_assign data['status'] = 'failed'
    endcase
  else
    hash_assign data['valid'] = false
  endif

  return data
%}
